- set_fact:
    rpfx: "{{ resource_group | hash('md5') | truncate(8, True, '') }}"

- name: Find available k8s version
  azure_rm_aksversion_info:
    location: eastus
  register: versions

- name: Create a kubernet service with minimal parameters
  azure_rm_aks:
    name: "min{{ rpfx }}"
    location: eastus
    resource_group: "{{ resource_group }}"
    kubernetes_version: "{{ versions.azure_aks_versions[0] }}"
    dns_prefix: "aks{{ rpfx }}"
    enable_rbac: true
    aad_profile:
      managed: true
    agent_pool_profiles:
      - name: default
        count: 1
        vm_size: Standard_B2s
        mode: System
    api_server_access_profile:
      authorized_ip_ranges:
        - "192.0.2.0"
        - "198.51.100.0"
        - "203.0.113.0"
      enable_private_cluster: no
    network_profile:
      load_balancer_sku: standard
      outbound_type: loadBalancer
  register: output

- name: Get cluster's node agent pool info
  azure_rm_aksagentpool_info:
    resource_group: "{{ resource_group }}"
    cluster_name: "min{{ rpfx }}" 
  register: output

- name: Assert node agent pool
  assert:
    that:
      - "output.aks_agent_pools | length == 1"

- name: Get aks agent pool support version
  azure_rm_aksagentpoolversion_info:
    resource_group: "{{ resource_group }}"
    cluster_name: "min{{ rpfx }}"
  register: agentpool_version

- name: Add agent pool
  azure_rm_aksagentpool:
    resource_group: "{{ resource_group }}"
    cluster_name: "min{{ rpfx }}"
    name: default03
    count: 2
    vm_size: Standard_B2s
    type_properties_type: VirtualMachineScaleSets
    mode: System
    node_labels: {"release":"stable"}
    max_pods: 42
    orchestrator_version: "{{ agentpool_version.azure_orchestrator_version[0] }}"
    availability_zones:
      - 1
      - 2
  register: output

- name: Assert the node agent pool created
  assert:
    that:
      - output.changed

- name: Get cluster's node agent pool info
  azure_rm_aksagentpool_info:
    resource_group: "{{ resource_group }}"
    cluster_name: "min{{ rpfx }}" 
  register: output

- name: Assert node agent pool
  assert:
    that:
      - "output.aks_agent_pools | length == 2"

- name: Upgrade node agent pool
  azure_rm_aksagentpool:
    resource_group: "{{ resource_group }}"
    cluster_name: "min{{ rpfx }}"
    name: default03
    count: 5
    vm_size: Standard_B2s
    type_properties_type: VirtualMachineScaleSets
    mode: System
    node_labels: {"release":"stable"}
    max_pods: 42
    orchestrator_version: "{{ agentpool_version.azure_orchestrator_version[1] }}"
    availability_zones:
      - 1
      - 2
  register: output

- name: Assert the node agent pool update
  assert:
    that:
      - output.changed

